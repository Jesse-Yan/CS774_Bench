{
    "0": "SELECT SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS EUR_Count, SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS CZK_Count, SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS Ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT t1.CustomerID FROM customers AS t1 INNER JOIN yearmonth AS t2 ON t1.CustomerID = t2.CustomerID WHERE t2.Date LIKE '2012%' ORDER BY t2.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption FROM yearmonth WHERE Date LIKE '2013%' AND Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END) AS consumption_difference FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE y.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTRING(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption FROM yearmonth GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT DATE_FORMAT(Date, '%Y-%m') AS PeakMonth, SUM(Consumption) AS PeakMonthConsumption FROM yearmonth WHERE DATE_FORMAT(Date, '%Y') = '2013' GROUP BY DATE_FORMAT(Date, '%Y-%m') ORDER BY PeakMonthConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'SME' ) - ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'LAM' ) AS SME_LAM_Difference, ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'LAM' ) - ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'KAM' ) AS LAM_KAM_Difference, ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'KAM' ) - ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'SME' ) AS KAM_SME_Difference;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT Segment, MAX(PercentageIncrease) AS HighestPercentageIncrease, MIN(PercentageIncrease) AS LowestPercentageIncrease FROM ( SELECT t1.Segment, ( (SUM(t2.Consumption) - SUM(t3.Consumption)) / SUM(t2.Consumption) ) * 100 AS PercentageIncrease FROM customers t1 INNER JOIN yearmonth t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Currency = 'EUR' AND t1.Segment IN ('SME', 'LAM', 'KAM') AND t2.Date LIKE '2013%' GROUP BY t1.Segment ) AS Subquery GROUP BY Segment;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT ( SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount' ) - ( SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount' ) AS difference;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT ( SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK' ) - ( SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR' ) AS difference;\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (COUNT(CASE WHEN Consumption > 46.73 THEN 1 END) * 100.0 / COUNT(*)) AS Percentage FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'LAM' );\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT (COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) * 100.0 / COUNT(*)) AS Percentage FROM yearmonth WHERE Date LIKE '201202%';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) AS HighestMonthlyConsumption FROM yearmonth WHERE Date LIKE '2012-%';\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID JOIN yearmonth ym ON t.TransactionID = ym.CustomerID WHERE ym.Date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT t.CustomerID) AS NumberOfCustomers FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND t.Amount > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time FROM transactions_1k WHERE GasStationID IN ( SELECT GasStationID FROM gasstations WHERE ChainID = 11 )\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) AS transactions_after_2012_1_1 FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT t.Currency FROM customers t JOIN transactions_1k tt ON t.CustomerID = tt.CustomerID WHERE tt.Date = '2012-08-24' AND tt.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT t.Segment FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-23' AND t.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(T1.TransactionID) AS cnt FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T2.GasStationID = T1.GasStationID WHERE T1.`Date` = '2012-08-26' AND T1.`Time` BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT c.Segment FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-24' AND t.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT (COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM customers WHERE Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (SUM(CASE WHEN YEAR(Date) = 2012 THEN Consumption ELSE 0 END) - SUM(CASE WHEN YEAR(Date) = 2013 THEN Consumption ELSE 0 END)) / SUM(CASE WHEN YEAR(Date) = 2012 THEN Consumption ELSE 0 END) AS consumption_decrease_rate FROM yearmonth WHERE Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT (COUNT(CASE WHEN Segment = 'premium' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM gasstations WHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(t.Amount) AS TotalAmountSpent, SUM(CASE WHEN t.Date = '201201' THEN t.Amount ELSE 0 END) AS January2012Amount FROM transactions_1k t WHERE t.CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.CustomerID, AVG(t.Price) AS AveragePricePerItem, c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID GROUP BY c.CustomerID, c.Currency ORDER BY SUM(t.Amount) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT t1.CustomerID, t2.Consumption FROM transactions_1k t1 INNER JOIN yearmonth t2 ON t1.CustomerID = t2.CustomerID WHERE t1.ProductID = 5 AND t1.Price / t1.Amount > 29.00 AND t2.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT m.link_to_major FROM member m WHERE m.first_name = 'Angela' AND m.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(DISTINCT m.member_id) AS medium_size_students FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women''s Soccer' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT T1.event_id) AS meetings FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting' GROUP BY T1.event_id HAVING COUNT(T1.event_id) > 10;\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name FROM event e JOIN ( SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20 ) a ON e.event_id = a.link_to_event WHERE e.type != 'fundraiser';\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(i.amount) AS total_funds_received FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT e.expense_id, e.approved FROM expense e JOIN event ev ON e.link_to_budget = ev.event_id WHERE ev.event_name = 'October Meeting' AND ev.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS total_average_cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND MONTH(STR_TO_DATE(e.expense_date, '%Y-%m-%d')) IN (9, 10);\t----- bird -----\tstudent_club",
    "38": "SELECT (SUM(CASE WHEN YEAR(event_date) = 2019 THEN spent ELSE 0 END) - SUM(CASE WHEN YEAR(event_date) = 2020 THEN spent ELSE 0 END)) AS difference FROM budget WHERE event_status = 'Student_Club';\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE date_received = '2019-09-14' AND source = 'Fundraising';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT e.status FROM event e JOIN expense exp ON e.event_id = exp.link_to_event WHERE exp.expense_description = 'Post Cards, Posters' AND exp.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "42": "SELECT m.major_name FROM major m JOIN member mem ON m.major_id = mem.link_to_major WHERE mem.first_name = 'Brent' AND mem.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) AS medium_size_t_shirt_business_members FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT date_received FROM income WHERE link_to_member IN ( SELECT member_id FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton' ) AND source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) AS yearly_kickoff_budget, SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) AS october_meeting_budget, SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) / SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) AS yearly_kickoff_to_october_meeting_ratio FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) AS number_of_cities FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT m.link_to_major FROM member m WHERE m.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT am.link_to_member) AS total_members_attended FROM attendance am JOIN event e ON am.link_to_event = e.event_id WHERE e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT m.first_name, m.last_name FROM member m JOIN major j ON m.link_to_major = j.major_id WHERE j.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' ORDER BY (b.spent / b.amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spend FROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(remaining) AS total_amount_spent_for_food FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name, m.last_name FROM member m JOIN ( SELECT link_to_member FROM attendance GROUP BY link_to_member HAVING COUNT(link_to_event) > 7 ) a ON m.member_id = a.link_to_member;\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'Yearly Kickoff' AND m.position = 'Budget Manager';\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name FROM event e JOIN expense exp ON e.event_id = exp.link_to_event ORDER BY exp.cost ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN e.cost ELSE 0 END) / SUM(e.cost)) * 100 AS yearly_kickoff_percentage FROM expense e;\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) AS total_amount FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY total_amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) AS number_of_members FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Advertisement' ORDER BY b.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT a.link_to_member FROM attendance a JOIN event e ON a.link_to_event = e.event_id JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT SUM(cost) AS total_cost FROM expense WHERE expense_description = 'Posters' AND event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' AND b.remaining < 0 ORDER BY b.remaining LIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT e.type, SUM(e.cost) AS total_value FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'October Meeting' AND e.approved = 'Yes' GROUP BY e.type;\t----- bird -----\tstudent_club",
    "66": "SELECT b.category, SUM(b.amount) AS total_amount FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'April Speaker' GROUP BY b.category ORDER BY total_amount ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT e.expense_description FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT b.category FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, m.position, m.t_shirt_size, m.phone, m.zip, m.link_to_major, d.department, d.college FROM member m JOIN major d ON m.link_to_major = d.major_id WHERE d.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT b.category FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT (COUNT(CASE WHEN i.amount = 50 THEN 1 END) * 100.0 / COUNT(i.link_to_member)) AS percentage FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE m.t_shirt_size = 'Medium' AND m.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name, m.last_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > ( SELECT AVG(cost) FROM expense );\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name, m.last_name, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name, m.last_name, i.amount FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE i.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT Admission, COUNT(ID) AS NumberOfMalePatients, (COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M')) AS Percentage FROM Patient WHERE SEX = 'M' GROUP BY Admission;\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT (COUNT(CASE WHEN YEAR(Birthday) > 1930 AND SEX = 'F' THEN 1 END) * 100.0 / COUNT(CASE WHEN SEX = 'F' THEN 1 END)) AS percentage FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS OutpatientCount, SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS InpatientCount, SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS Ratio FROM Patient WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Diagnosis, `Date` FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID WHERE P.ID = '30609';\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT ID, TIMESTAMPDIFF(YEAR, Birthday, CURDATE()) AS age FROM Patient WHERE ID IN ( SELECT ID FROM Examination WHERE RVVT = '+' );\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.ID, p.SEX, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(DISTINCT ID) AS NumberOfFemalePatients FROM Patient WHERE YEAR(Description) = 1997 AND SEX = 'F' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 1 AND T1.SEX = 'F' AND YEAR(T2.`Examination Date`) = 1997;\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Symptoms, Diagnosis FROM Examination WHERE Symptoms IS NOT NULL ORDER BY `Examination Date` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT T1.`Date`, YEAR(T1.`First Date`) - YEAR(T1.Birthday) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' ORDER BY T1.`Date` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS female_count FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA <= 8.0 AND T1.SEX = 'M' UNION ALL SELECT SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS female_count FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA <= 6.5 AND T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT T1.ID) AS underage_patients FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE YEAR(T2.`Examination Date`) BETWEEN 1990 AND 1993 AND YEAR(T1.Birthday) < 1990\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT TIMESTAMPDIFF(YEAR, T1.Birthday, T2.`Examination Date`) AS Age, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID ORDER BY T2.HGB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT aCL_IgM FROM Examination WHERE `Examination Date` = '1993-11-12' AND ID IN ( SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19' );\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (SUM(CASE WHEN DATE LIKE '1981-11-%' THEN T-CHO ELSE 0 END) - SUM(CASE WHEN DATE LIKE '1981-12-%' THEN T-CHO ELSE 0 END)) / SUM(CASE WHEN DATE LIKE '1981-12-%' THEN T-CHO ELSE 0 END) AS decrease_rate FROM Laboratory WHERE ID IN ( SELECT ID FROM Patient WHERE Birthday = '1959-02-18' );\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) AS NumberOfPatients FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 2 AND e.ANA = 'S' AND l.aCL_IgM > ( SELECT AVG(aCL_IgM) FROM Laboratory ) * 1.2;\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`Date` LIKE '1991-10%' AND T2.T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(T2.ALB) AS average_blood_albumin_level FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.PLT > 400 AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) AS female_aps_diagnosed FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (COUNT(CASE WHEN T1.SEX = 'F' THEN 1 END) * 100.0 / COUNT(T1.SEX)) AS percentage FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE YEAR(T1.Birthday) = 1980 AND T2.Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE WHEN (SELECT UA FROM Laboratory WHERE ID = 57266) > 8 AND SEX = 'M' THEN 'Within Normal Range' WHEN (SELECT UA FROM Laboratory WHERE ID = 57266) > 6.5 AND SEX = 'F' THEN 'Within Normal Range' ELSE 'Not Within Normal Range' END AS NormalRangeStatus;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 60 ORDER BY T1.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT p.SEX, COUNT(l.ID) AS patient_count FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.T-BIL >= 2.0 GROUP BY p.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(CURDATE()) - YEAR(birthday)) AS average_age FROM Patient WHERE SEX = 'M' AND ID IN ( SELECT ID FROM Examination WHERE `T-CHO` >= 250 );\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND YEAR(CURDATE()) - YEAR(T1.Birthday) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT T1.ID) AS male_patients FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND T2.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT ID, SEX, TIMESTAMPDIFF(YEAR, Birthday, CURDATE()) AS age FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE GLU >= 180 ) AND ID IN ( SELECT ID FROM Laboratory WHERE T-CHO < 250 );\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.ID, p.Diagnosis, TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) AS Age FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.HGB BETWEEN 10 AND 17 ORDER BY T1.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT ID, TIMESTAMPDIFF(YEAR, Birthday, CURDATE()) AS age FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE HCT >= 52 GROUP BY ID HAVING COUNT(*) > 2 )\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal, SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal FROM Laboratory WHERE PLT < 100 OR PLT > 400;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT T1.ID, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE YEAR(T2.`Date`) = 1984 AND TIMESTAMPDIFF(YEAR, T1.Birthday, CURDATE()) < 50 AND T2.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT (COUNT(CASE WHEN T1.SEX = 'F' AND T2.PT >= 14 THEN 1 END) * 100.0 / COUNT(T1.SEX)) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE YEAR(CURDATE()) - YEAR(T1.Birthday) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 3.5 AND 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) AS NumberOfPatients FROM Laboratory WHERE IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(DISTINCT T1.ID) AS num_patients FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.IGG > 900 AND T2.IGG < 2000 AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT ID) AS normal_iga_patients FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID WHERE p.`First Date` > '1990-01-01' AND e.IGA > 80 AND e.IGA < 500;\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(*) AS DiagnosisCount FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.IGM <= 40 OR T2.IGM >= 400 GROUP BY Diagnosis ORDER BY DiagnosisCount DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP = '+' AND T1.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(T1.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT T1.ID) AS num_patients FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RNP = '-' AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.SM = 'negative' AND T2.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT T1.ID) AS NumberOfPatients FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Symptoms IS NULL AND T2.SC170 IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT T1.ID) AS male_count FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-') AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(T1.Birthday) AS youngest_birthday FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT T1.ID) AS num_patients FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY SUM(T1.home_team_goal + T1.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT T1.team_long_name FROM Team AS T1 JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id JOIN League AS T3 ON T2.league_id = T3.id WHERE T3.name = 'Scotland Premier League' AND T2.season = '2009/2010' AND T2.away_team_goal > T2.home_team_goal GROUP BY T1.team_long_name ORDER BY COUNT(T2.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT t.team_long_name, t.team_short_name, ta.buildUpPlaySpeed FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id ORDER BY ta.buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T1.home_team_goal = T1.away_team_goal GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(birthday, '%Y') - (DATE_FORMAT(CURDATE(), '%m%d') < DATE_FORMAT(birthday, '%m%d')) AS age FROM Player_Attributes WHERE sprint_speed >= 97 AND YEAR(date) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "133": "SELECT T1.name, COUNT(T2.league_id) AS match_count FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.name ORDER BY match_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T2.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE STR_TO_DATE(date, '%Y-%m-%d') >= STR_TO_DATE('2012-01-01', '%Y-%m-%d') AND STR_TO_DATE(date, '%Y-%m-%d') <= STR_TO_DATE('2012-12-31', '%Y-%m-%d') )\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST(SUM(CASE WHEN T1.preferred_foot = 'left' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.player_api_id) AS percentage FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE YEAR(STR_TO_DATE(T2.birthday, '%d/%m/%Y')) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(T2.long_shots) AS average_long_shots FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id WHERE T1.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT AVG(T1.home_team_goal) AS avg_home_goals, AVG(T1.away_team_goal) AS avg_away_goals, T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2009/2010' GROUP BY T2.name HAVING avg_home_goals > avg_away_goals;\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name FROM Player WHERE birthday LIKE '1970-10-%';\t----- bird -----\teuropean_football_2",
    "141": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND T2.date LIKE '%2011%' GROUP BY T2.overall_rating;\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match JOIN League ON Match.country_id = League.id WHERE League.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.finishing = ( SELECT AVG(finishing) FROM Player_Attributes WHERE height = ( SELECT MAX(height) FROM Player ) OR height = ( SELECT MIN(height) FROM Player ) )\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) AS average_overall_rating FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.id = t2.player_fifa_api_id WHERE t2.date BETWEEN '2010-01-01' AND '2015-12-31' AND t1.height > 170;\t----- bird -----\teuropean_football_2",
    "145": "SELECT (SUM(CASE WHEN T2.player_name = 'Abdou Diallo' THEN T1.ball_control ELSE 0 END) / COUNT(CASE WHEN T2.player_name = 'Abdou Diallo' THEN T1.id ELSE NULL END)) - (SUM(CASE WHEN T2.player_name = 'Aaron Appindangoye' THEN T1.ball_control ELSE 0 END) / COUNT(CASE WHEN T2.player_name = 'Aaron Appindangoye' THEN T1.id ELSE NULL END)) AS difference FROM Player_Attributes T1 INNER JOIN Player T2 ON T1.player_api_id = T2.id\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(DISTINCT player_api_id) AS player_count FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.defensive_work_rate = 'high' AND STR_TO_DATE(T1.birthday, '%d/%m/%Y') < '1986-01-01'\t----- bird -----\teuropean_football_2",
    "150": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) AS match_count FROM Match m JOIN League l ON m.league_id = l.id WHERE l.name = 'Belgium Jupiler League' AND SUBSTR(m.`date`, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2008/2009' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT ( (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') - (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel') ) * 100.0 / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel') AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) AS average_overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.id WHERE T2.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date = '2016-06-23%' ORDER BY T1.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND date = '2016-02-04';\t----- bird -----\teuropean_football_2",
    "158": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND T2.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT T2.date FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id WHERE T1.player_name = 'Kevin Constant' ORDER BY T2.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(T2.overall_rating) AS average_overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id WHERE T1.player_name = 'Marko Arnautovic' AND T2.date LIKE '2007%' AND T2.date LIKE '%2016%'\t----- bird -----\teuropean_football_2",
    "163": "SELECT (SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) - SUM(CASE WHEN T1.player_name = 'Jordan Bowery' THEN T2.overall_rating ELSE 0 END)) * 100.0 / SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) AS percentage FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id WHERE T2.date = '2013-07-12';\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "165": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.attacking_work_rate = 'high' GROUP BY T1.player_name;\t----- bird -----\teuropean_football_2",
    "167": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) AS number_of_players FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": "SELECT ( SELECT jumping FROM Player_Attributes WHERE player_api_id = 6 ) - ( SELECT jumping FROM Player_Attributes WHERE player_api_id = 23 ) AS difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.preferred_foot = 'right' ORDER BY T1.potential ASC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(DISTINCT player_api_id) AS player_count FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = ( SELECT MAX(crossing) FROM Player_Attributes WHERE preferred_foot = 'left' );\t----- bird -----\teuropean_football_2",
    "172": "SELECT m.home_team_goal AS home_team_score, m.away_team_goal AS away_team_score FROM Match m JOIN League l ON m.league_id = l.id WHERE m.date LIKE '2008-09-24%' AND l.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "173": "SELECT t.team_long_name, taa.buildUpPlaySpeedClass FROM Team t JOIN Team_Attributes taa ON t.team_api_id = taa.team_api_id WHERE t.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": "SELECT T1.finishing, T1.curve FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.id WHERE T2.weight = ( SELECT MAX(weight) FROM Player )\t----- bird -----\teuropean_football_2",
    "175": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT T1.team_long_name FROM Team AS T1 JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id ORDER BY T2.away_team_goal DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "177": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": "SELECT (COUNT(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE NULL END) * 100.0 / COUNT(T1.id)) AS percentage FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
    "179": "SELECT T.driverRef FROM ( SELECT T1.driverRef, T2.q1 FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 20 ORDER BY T2.q1 DESC LIMIT 5 ) AS T ORDER BY T.q1 DESC;\t----- bird -----\tformula_1",
    "180": "SELECT T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 19 AND T1.q2 IS NOT NULL ORDER BY T1.q2 ASC LIMIT 1;\t----- bird -----\tformula_1",
    "181": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": "SELECT c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna' );\t----- bird -----\tformula_1",
    "185": "SELECT q.number FROM qualifying q WHERE q.raceId = 903 AND q.q3 = '1:54';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(DISTINCT driverId) AS drivers_not_finished FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007 ) AND time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT d.driverRef, d.surname, d.dob FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 592 AND r.time IS NOT NULL ORDER BY d.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.forename, d.surname, d.url FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE lt.raceId = 161 AND lt.time = '1:27';\t----- bird -----\tformula_1",
    "189": "SELECT c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 9 ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "191": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T2.q3 = '1:33' AND T2.raceid = 45;\t----- bird -----\tformula_1",
    "192": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 872 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality FROM drivers d JOIN results r ON d.driverid = r.driverid ORDER BY r.fastestlapspeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "195": "SELECT ( (SELECT fastestLapSpeed FROM results WHERE raceId = 853) - (SELECT fastestLapSpeed FROM results WHERE raceId = 854) ) * 100.0 / (SELECT fastestLapSpeed FROM results WHERE raceId = 853) AS percentage_faster\t----- bird -----\tformula_1",
    "196": "SELECT (COUNT(DISTINCT CASE WHEN T2.time IS NOT NULL THEN T1.driverid END) * 100.0 / COUNT(DISTINCT T1.driverid)) AS completion_rate FROM results AS T1 INNER JOIN pitstops AS T2 ON T1.driverid = T2.driverid AND T1.raceid = T2.raceid WHERE T1.raceid = ( SELECT raceid FROM races WHERE date = '1983-07-16' )\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races ORDER BY date ASC LIMIT 1;\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, MAX(dr.points) AS max_points FROM drivers d JOIN driverStandings dr ON d.driverId = dr.driverId GROUP BY d.forename, d.surname ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT d.forename, d.surname, r.name AS race_name, lt.time AS best_lap_time FROM drivers d JOIN results r ON d.driverid = r.driverid JOIN lapTimes lt ON r.resultid = lt.driverid ORDER BY lt.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lt.milliseconds) AS average_lap_time FROM drivers d JOIN results r ON d.driverid = r.driverid JOIN races rc ON r.raceid = rc.raceid JOIN lapTimes lt ON r.resultid = lt.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND rc.name = 'Malaysian Grand Prix' AND rc.year = 2009;\t----- bird -----\tformula_1",
    "201": "SELECT (COUNT(DISTINCT CASE WHEN position > 1 THEN raceId END) * 100.0 / COUNT(DISTINCT raceId)) AS percentage FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.surname = 'Hamilton' AND results.raceId IN ( SELECT raceId FROM races WHERE year >= 2010 );\t----- bird -----\tformula_1",
    "202": "SELECT d.forename, d.surname, d.nationality, MAX(cs.wins) AS max_wins, MAX(cs.points) AS max_points FROM drivers d JOIN driverStandings cs ON d.driverId = cs.driverId GROUP BY d.forename, d.surname, d.nationality ORDER BY max_wins DESC, max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "203": "SELECT YEAR(CURDATE()) - YEAR(dob) AS age, CONCAT(forename, ' ', surname) AS name FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT r.name AS race_name, c.name AS circuit_name, c.location AS circuit_location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE YEAR(r.date) = 2005 AND MONTH(r.date) = 9;\t----- bird -----\tformula_1",
    "205": "SELECT r.name AS race_name FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND res.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.name AS race_name, r.year FROM races r JOIN results rs ON r.raceId = rs.raceId JOIN drivers d ON rs.driverId = d.driverId WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' ORDER BY rs.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT r.name AS first_race, r.points AS points_recorded FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.year ASC, r.round ASC LIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT (COUNT(CASE WHEN T2.country = 'Germany' THEN 1 ELSE NULL END) * 100.0 / COUNT(*)) AS percentage FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT T2.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Canadian Grand Prix' AND T1.year = 2007 AND T2.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT r.name AS race_name FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(T2.fastestLapSpeed) AS fastest_lap_speed FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009;\t----- bird -----\tformula_1",
    "215": "SELECT r.positionOrder FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races rc ON r.raceId = rc.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND rc.name = 'Chinese Grand Prix' AND rc.year = 2008 ORDER BY rc.year DESC, rc.round DESC LIMIT 1;\t----- bird -----\tformula_1",
    "216": "SELECT r.time FROM results r JOIN races rc ON r.raceId = rc.raceId WHERE rc.name = 'Chinese Grand Prix' AND r.rank = 2 AND r.positionText = '2nd';\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT driverId) AS drivers_participated FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE year = 2008 AND name = '2008 Chinese Grand Prix' ) AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT (SUM(T1.milliseconds) - MIN(T1.milliseconds)) * 100.0 / SUM(T1.milliseconds) AS percentage_faster FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.position = 1;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) AS circuit_count FROM circuits WHERE country = 'Australia' AND location = 'Adelaide';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) AS max_points FROM constructorStandings JOIN constructors ON constructorStandings.constructorId = constructors.constructorId WHERE constructors.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT DISTINCT c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE cs.raceId = 291 AND cs.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT constructorId) AS japanese_constructors_with_0_points_in_2_races FROM constructorStandings WHERE points = 0 AND constructorId IN ( SELECT constructorId FROM constructors WHERE nationality = 'Japanese' ) AND raceId IN ( SELECT raceId FROM races GROUP BY raceId HAVING COUNT(raceId) = 2 );\t----- bird -----\tformula_1",
    "223": "SELECT (COUNT(DISTINCT CASE WHEN T2.time IS NOT NULL THEN T1.driverid END) * 100.0 / COUNT(DISTINCT T1.driverid)) AS completion_percentage FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "224": "SELECT year, AVG(TIME_TO_SEC(TIMESTAMP(time, '00:00:00'))) AS average_time_seconds FROM results WHERE time IS NOT NULL AND year < 1975 GROUP BY year;\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE year = 2009 ) ORDER BY positionText = '1' DESC, fastestLap ASC LIMIT 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(T.fastestLapSpeed) AS average_fastest_lap_speed FROM results T JOIN races R ON T.raceId = R.raceId WHERE R.name = 'Spanish Grand Prix' AND R.year = 2009;\t----- bird -----\tformula_1",
    "227": "SELECT (COUNT(DISTINCT CASE WHEN YEAR(dob) < 1985 THEN driverId END) * 100.0 / COUNT(DISTINCT CASE WHEN YEAR(r.date) BETWEEN 2000 AND 2005 THEN driverId END)) AS percentage FROM drivers d JOIN results r ON d.driverid = r.driverid WHERE r.laps > 50;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT driverId) AS french_drivers_with_laptime_less_than_2_minutes FROM drivers WHERE nationality = 'French' AND driverId IN ( SELECT driverId FROM lapTimes WHERE time < '02:00:00' );\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT code, COUNT(*) AS netherlandic_drivers FROM drivers WHERE nationality IN ('Netherlands', 'Dutch') ORDER BY YEAR(dob) DESC LIMIT 3;\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT DISTINCT d.driverId, d.code FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE YEAR(d.dob) = 1971 AND r.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) AS disqualified_finishers FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(*) AS times_held, location, CONCAT(lat, ',', lng) AS coordinates FROM circuits WHERE country = 'Austria';\t----- bird -----\tformula_1",
    "235": "SELECT MIN(T2.year) AS youngest_driver_year, T2.name AS race_name, T2.date AS race_date, T2.time AS race_time FROM drivers AS T1 INNER JOIN qualifying AS T3 ON T1.driverid = T3.driverid INNER JOIN races AS T2 ON T3.raceid = T2.raceid ORDER BY T1.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "236": "SELECT d.forename, d.surname, AVG(p.duration) AS avg_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND YEAR(d.dob) BETWEEN 1980 AND 1985 GROUP BY d.forename, d.surname ORDER BY avg_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT d.forename, d.surname, r.time FROM drivers d JOIN results r ON d.driverid = r.driverid JOIN races rc ON r.raceid = rc.raceid WHERE rc.name = 'Canadian Grand Prix' AND rc.year = 2008 AND r.position = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.constructorRef, c.url FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId JOIN races r ON cs.raceId = r.raceId WHERE r.year = 2009 AND r.name = 'Singapore Grand Prix' ORDER BY cs.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "239": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT c.name AS constructor_name, c.nationality AS constructor_nationality, cr.points FROM constructorResults cr JOIN constructors c ON cr.constructorId = c.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T3.raceid = T2.raceid INNER JOIN circuits AS T4 ON T4.circuitid = T3.circuitid WHERE T2.position = 1 AND T3.year = 2008 AND T4.name = 'Marina Bay Street Circuit' AND T2.q3 = '0:00:00.000';\t----- bird -----\tformula_1",
    "242": "SELECT d.forename, d.surname, d.nationality, r.name AS race_name FROM drivers d JOIN results r ON d.driverid = r.driverid ORDER BY d.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) AS accident_count FROM results JOIN status ON results.statusId = status.statusId WHERE results.raceId = ( SELECT raceId FROM races WHERE name = 'Canadian Grand Prix' ) AND status.status = 'accident';\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname FROM drivers d JOIN ( SELECT driverId FROM lapTimes ORDER BY TIME(time) ASC LIMIT 20 ) AS shortest_lap ON d.driverId = shortest_lap.driverId;\t----- bird -----\tformula_1",
    "245": "SELECT r.name AS race_name, q.q1, q.q2, q.q3 FROM races r JOIN qualifying q ON r.raceId = q.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Italy' ORDER BY q.q1, q.q2, q.q3;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(DISTINCT h.id) AS superhero_count FROM superhero h JOIN hero_power hp ON h.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' AND h.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT h.id) AS superhero_count FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower p ON hp.power_id = p.id JOIN colour c ON s.eye_colour_id = c.id WHERE c.colour = 'Blue' AND p.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT s.superhero_name FROM superhero s JOIN colour c ON s.eye_colour_id = c.id AND s.hair_colour_id = c.id WHERE c.colour IN ('Blue', 'Blond');\t----- bird -----\tsuperhero",
    "249": "SELECT s.superhero_name, s.height_cm FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour, COUNT(s.id) AS popularity FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN colour c ON s.eye_colour_id = c.id WHERE p.publisher_name = 'Marvel Comics' GROUP BY c.colour ORDER BY popularity DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' ORDER BY ha.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(DISTINCT s.id) AS gold_eyed_superheroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN colour c ON s.eye_colour_id = c.id WHERE p.publisher_name = 'Marvel Comics' AND c.colour = 'Gold';\t----- bird -----\tsuperhero",
    "254": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_name = 'Intelligence' ORDER BY ha.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "255": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT s.id) AS female_superheroes_with_strength_100 FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.gender_id = ( SELECT id FROM gender WHERE gender = 'Female' ) AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT (COUNT(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(T1.id)) AS percentage, COUNT(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN 1 END) AS count_marvel_comics FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "260": "SELECT ( SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ) - ( SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' ) AS difference_in_superheroes;\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) AS total_superheroes_without_full_name FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(s.weight_kg) AS average_weight FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id JOIN gender g ON h.gender_id = g.id WHERE g.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.height_cm BETWEEN 170 AND 190 AND a.attribute_name = 'Eye Color' AND ha.attribute_value = 0;\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour FROM superhero s JOIN race r ON s.race_id = r.id JOIN colour c ON s.hair_colour_id = c.id WHERE r.race = 'human' AND s.height_cm = 185;\t----- bird -----\tsuperhero",
    "267": "SELECT (COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT superhero_name FROM superhero WHERE gender_id = ( SELECT id FROM gender WHERE gender = 'Male' ) AND weight_kg > ( SELECT AVG(weight_kg) * 0.79 FROM superhero );\t----- bird -----\tsuperhero",
    "269": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id WHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hp.hero_id) AS hero_count FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'strength' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' ORDER BY h.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT s.eye_colour_id AS eyes, s.hair_colour_id AS hair, s.skin_colour_id AS skin_colour FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender_id = ( SELECT id FROM gender WHERE gender = 'Female' );\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.hair_colour_id = s.skin_colour_id AND s.hair_colour_id = s.eye_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT (COUNT(CASE WHEN T1.skin_colour_id = ( SELECT id FROM colour WHERE colour = 'Blue' ) THEN 1 ELSE NULL END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(DISTINCT hp.power_id) AS number_of_powers FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id WHERE s.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT s.height_cm FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE c.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT s.superhero_name FROM superhero s JOIN colour c ON s.eye_colour_id = c.id AND s.hair_colour_id = c.id WHERE c.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT superhero_name FROM superhero WHERE alignment_id = ( SELECT id FROM alignment WHERE alignment = 'Neutral' );\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT h.id) AS hero_count FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id JOIN superhero s ON ha.hero_id = s.id WHERE a.attribute_name = 'Strength' AND ha.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Strength' );\t----- bird -----\tsuperhero",
    "281": "SELECT (COUNT(CASE WHEN T1.gender = 'Female' THEN 1 END) * 100.0 / COUNT(T1.publisher_id)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT ( SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky' ) - ( SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler' ) AS weight_difference;\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height FROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_name = 'Speed' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT s.superhero_name FROM superhero s JOIN colour c ON s.eye_colour_id = c.id AND s.hair_colour_id = c.id WHERE c.colour IN ('Blue', 'Brown');\t----- bird -----\tsuperhero",
    "288": "SELECT T.publisher_name FROM publisher AS T JOIN superhero AS T2 ON T.id = T2.publisher_id WHERE T2.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT (COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE NULL END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue';\t----- bird -----\tsuperhero",
    "290": "SELECT SUM(CASE WHEN T.gender_id = 1 THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN T.gender_id = 2 THEN 1 ELSE 0 END) AS female_count, CAST(SUM(CASE WHEN T.gender_id = 1 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) / SUM(CASE WHEN T.gender_id = 2 THEN 1 ELSE 0 END) AS ratio FROM superhero T;\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) AS difference FROM superhero AS T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) AS green_skinned_villains_count FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN colour c ON s.skin_colour_id = c.id WHERE a.alignment = 'Bad' AND c.colour = 'Green';\t----- bird -----\tsuperhero",
    "294": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower p ON hp.power_id = p.id WHERE p.power_name = 'Wind Control' ORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender FROM gender g JOIN superhero s ON g.id = s.gender_id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT ( SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' ) - ( SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ) AS difference_in_superheroes;\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, MAX(Reputation) AS HighestReputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') GROUP BY DisplayName;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE YEAR(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) AS NumberOfUsers FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) AS NumberOfPosts FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId WHERE p.Title = 'Examples for teaching: Correlation does not mean causation' ORDER BY ph.CreationDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Age > 65 AND p.Score > 19;\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) AS AverageScore FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT (COUNT(CASE WHEN u.Age > 65 THEN 1 END) * 100.0 / COUNT(*)) AS ElderUserPercentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.CreationDate = '2014-04-23 20:29:39' AND c.UserId = 3025;\t----- bird -----\tcodebase_community",
    "308": "SELECT p.ClosedDate IS NULL AS well_finished FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.CreationDate = '2013-07-12 09:08:18.0' AND c.UserId = 23853;\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) AS NumberOfPosts FROM posts WHERE OwnerDisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) AS PostCount, (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS VoteCount, (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS PostToVoteRatio\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text, c.CreationDate, c.UserId, c.UserDisplayName FROM comments c JOIN postHistory ph ON c.PostId = ph.PostId WHERE ph.Text LIKE '%Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT AVG(p.ViewCount) AS AverageViewCount, p.Title, c.Text AS Comment FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Tags LIKE '%<humor>%' GROUP BY p.Title, c.Text;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) AS NumberOfUsers FROM badges GROUP BY UserId HAVING COUNT(Name) > 5;\t----- bird -----\tcodebase_community",
    "321": "SELECT u.Id AS UserId, u.DisplayName FROM users u JOIN ( SELECT ph.PostId, COUNT(ph.Id) AS HistoryCount FROM postHistory ph GROUP BY ph.PostId HAVING HistoryCount = 1 ) ph ON u.Id = ph.PostId JOIN posts p ON ph.PostId = p.Id WHERE p.ViewCount >= 1000;\t----- bird -----\tcodebase_community",
    "322": "SELECT (COUNT(CASE WHEN YEAR(b.Date) = 2010 THEN 1 END) * 100.0 / COUNT(b.Name)) - (COUNT(CASE WHEN YEAR(b.Date) = 2011 THEN 1 END) * 100.0 / COUNT(b.Name)) AS percentage_difference FROM badges b WHERE b.Name = 'Student';\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS average_up_votes, AVG(u.Age) AS average_user_age FROM users u JOIN ( SELECT UserId FROM posts GROUP BY UserId HAVING COUNT(Id) > 10 ) AS filtered_users ON u.Id = filtered_users.UserId;\t----- bird -----\tcodebase_community",
    "324": "SELECT SUM(CASE WHEN YEAR(CreationDate) = 2010 THEN 1 ELSE 0 END) AS votes_2010, SUM(CASE WHEN YEAR(CreationDate) = 2011 THEN 1 ELSE 0 END) AS votes_2011, SUM(CASE WHEN YEAR(CreationDate) = 2010 THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN YEAR(CreationDate) = 2011 THEN 1 ELSE 0 END) AS ratio FROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'slashnick' ORDER BY p.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT p.OwnerUserId, u.DisplayName, SUM(p.ViewCount) AS TotalViewCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY p.OwnerUserId, u.DisplayName ORDER BY TotalViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mark Meckes' AND T1.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT (COUNT(CASE WHEN T2.TagName = 'r' THEN 1 ELSE NULL END) * 100.0 / COUNT(T1.Id)) AS percentage FROM posts AS T1 INNER JOIN postTags AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId = 0;\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(CASE WHEN u.DisplayName = 'Mornington' THEN p.ViewCount ELSE 0 END) - SUM(CASE WHEN u.DisplayName = 'Amos' THEN p.ViewCount ELSE 0 END) AS difference_in_view_count FROM posts p JOIN users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(monthly_count) AS average_monthly_links FROM ( SELECT COUNT(*) AS monthly_count FROM postLinks WHERE YEAR(CreationDate) = 2010 GROUP BY MONTH(CreationDate) ) AS monthly_counts;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) AS FirstVoteDate FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Autobiographer' ORDER BY b.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id) AS NumberOfUsers FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id AS PostId, p.OwnerDisplayName FROM posts p WHERE YEAR(p.CreationDate) = 2010 ORDER BY p.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT (COUNT(CASE WHEN u.Reputation > 1000 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "337": "SELECT SUM(p.ViewCount) AS TotalViews, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Computer Game Datasets' ORDER BY p.LasActivityDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "338": "SELECT MAX(p.Score) AS HighestScorePostId, SUM(c.CommentCount) AS TotalComments FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Score = ( SELECT MAX(Score) FROM posts );\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT (COUNT(CASE WHEN p.Score > 50 THEN 1 END) * 100.0 / COUNT(p.Id)) AS Percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Reputation = ( SELECT MAX(Reputation) FROM users )\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ViewCount BETWEEN 100 AND 150 ORDER BY c.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT (COUNT(CASE WHEN u.UpVotes = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT c.name FROM cards c WHERE c.borderColor = 'borderless' AND c.cardKingdomFoilId IS NULL AND c.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "348": "SELECT c.name FROM cards c JOIN legalities l ON c.id = l.id WHERE c.rarity = 'mythic' AND l.status = 'Banned' AND l.format = 'gladiator';\t----- bird -----\tcard_games",
    "349": "SELECT DISTINCT t1.status FROM legalities t1 INNER JOIN cards t2 ON t2.uuid = t1.uuid WHERE t2.types = 'Artifact' AND t2.side IS NULL AND t1.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND (c.power = '*' OR c.power IS NULL) AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "351": "SELECT c.id, c.text, r.text AS ruling_text, c.hasContentWarning FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Stephen Daniel';\t----- bird -----\tcard_games",
    "352": "SELECT c.name AS card_name, c.artist, c.isPromo FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.isPromo = 1 GROUP BY c.name, c.artist, c.isPromo ORDER BY COUNT(r.id) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT CAST(SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(*) AS percentage FROM set_translations;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) AS infinite_power_cards FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT l.format FROM cards c JOIN legalities l ON c.id = l.uuid WHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT (COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_borderless_cards FROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT (COUNT(CASE WHEN f.language = 'French' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) AS white_border_banned_cards FROM cards WHERE borderColor = 'white' AND status = 'Banned';\t----- bird -----\tcard_games",
    "362": "SELECT c.name FROM cards c JOIN foreign_data fd ON c.scryfallId = fd.scryfallId WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND fd.language IS NOT NULL;\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT (COUNT(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN id END) * 100.0 / COUNT(id)) AS percentage FROM cards;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT st.setCode) AS brazilian_portuguese_translated_sets FROM set_translations st JOIN sets s ON st.setCode = s.code WHERE st.language = 'Portuguese (Brasil)' AND s.block = 'Commander';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT t1.subtypes, t1.supertypes FROM cards t1 INNER JOIN set_translations t2 ON t1.setCode = t2.setCode WHERE t2.language = 'German' AND t1.subtypes IS NOT NULL AND t1.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(DISTINCT c.id) AS card_count FROM cards c JOIN rulings r ON c.id = r.uuid JOIN legalities l ON c.id = l.id WHERE l.format = 'premodern' AND r.text = 'This is a triggered mana ability.' AND c.side IS NULL;\t----- bird -----\tcard_games",
    "369": "SELECT fd.name FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE c.artist = 'Matthew D. Wilson' AND c.borderColor = 'black' AND c.layout = 'normal' AND c.types = 'Creature' AND fd.language = 'French';\t----- bird -----\tcard_games",
    "370": "SELECT t.language FROM set_translations t JOIN sets s ON t.setCode = s.code WHERE s.block = 'Ravnica' AND s.baseSetSize = 180;\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(CASE WHEN c.hasContentWarning = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'commander' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "372": "SELECT (COUNT(CASE WHEN language = 'French' AND (power IS NULL OR power = '*') THEN 1 END) * 100.0 / COUNT(CASE WHEN power IS NULL OR power = '*' THEN 1 END)) AS percentage FROM foreign_data;\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) / COUNT(*) * 100 AS proportion FROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT t.language FROM set_translations t JOIN sets s ON t.setCode = s.code WHERE s.mcmName = 'Archenemy' AND t.setCode = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT f.language FROM foreign_data f JOIN cards c ON f.name = c.asciiName WHERE c.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "378": "SELECT t.translation FROM set_translations t JOIN cards c ON t.setCode = c.setCode WHERE t.language = 'Italian' AND c.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "379": "SELECT f.language, f.name, f.text FROM foreign_data f JOIN cards c ON f.name = c.asciiName WHERE c.name = 'Ancestor''s Chosen' AND f.language = 'Korean';\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) AS card_count FROM cards c JOIN set_translations st ON c.setCode = st.setCode WHERE st.translation = 'Hauptset Zehnte Edition' AND c.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT t2.translation FROM sets AS t1 INNER JOIN set_translations AS t2 ON t1.code = t2.setCode WHERE t1.name = 'Eighth Edition' AND t2.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT s.name AS setName FROM sets s JOIN cards c ON s.code = c.setCode WHERE c.name = 'Angel of Mercy' AND (s.mtgoCode IS NOT NULL OR s.isOnlineOnly = 1);\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT st.id) AS italian_translated_sets FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT s.isForeignOnly FROM sets s JOIN cards c ON s.code = c.setCode WHERE c.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT artist FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setCode = ( SELECT code FROM sets WHERE name = 'Coldsnap' );\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT f.flavorText FROM foreign_data f JOIN cards c ON f.name = c.name WHERE f.language = 'Italian' AND c.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "389": "SELECT r.text FROM rulings r JOIN cards c ON r.uuid = c.uuid JOIN set_translations st ON c.setCode = st.setCode WHERE st.language = 'Italian' AND c.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "390": "SELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Italian' AND T1.setCode = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "391": "SELECT (COUNT(CASE WHEN c.convertedManaCost = 7 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "392": "SELECT (COUNT(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards WHERE setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "393": "SELECT format, COUNT(*) AS banned_count FROM legalities WHERE status = 'Banned' GROUP BY format ORDER BY banned_count DESC LIMIT 1;\t----- bird -----\tcard_games",
    "394": "SELECT c.name AS card_name, l.format AS banned_play_format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.edhrecRank = 1 AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT c.name AS card_name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT DISTINCT st.setCode FROM set_translations st WHERE st.language = 'Korean' AND st.setCode NOT IN ( SELECT DISTINCT st2.setCode FROM set_translations st2 WHERE st2.language = 'Japanese' );\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT c.frameVersion, c.name AS card_name FROM cards c WHERE c.artist = 'Allen Williams' UNION SELECT DISTINCT l.format, l.status FROM legalities l WHERE l.status = 'Banned';\t----- bird -----\tcard_games",
    "398": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(CASE WHEN a.element = 'o' THEN 1 ELSE 0 END) AS average_oxygen_atoms FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(CASE WHEN T1.bond_type = '-' THEN 1 ELSE 0 END) AS avg_single_bonded FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "401": "SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "402": "SELECT (COUNT(CASE WHEN T3.element = 'c' THEN 1 ELSE NULL END) * 100.0 / COUNT(T2.atom_id)) AS percentage FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a1.element, a2.element FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'h' GROUP BY m.label ORDER BY COUNT(m.label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT T3.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN ( SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id WHERE T1.label = '-' GROUP BY T1.molecule_id ) AS T3 ON T1.molecule_id = T3.molecule_id GROUP BY T3.element ORDER BY COUNT(T3.element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) AS distinct_atoms FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element IN ('i', 's') AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "409": "SELECT (COUNT(DISTINCT T1.molecule_id) - SUM(CASE WHEN T2.element = 'f' THEN 1 ELSE 0 END)) * 100.0 / COUNT(DISTINCT T1.molecule_id) AS percentage FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT SUM(CASE WHEN T2.bond_type = '#' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.molecule_id) AS percent FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "411": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond_id), 5) AS double_bond_percentage FROM bond WHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(molecule_id), 3) AS carcinogenic_percentage FROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) * 100.0 / COUNT(a.atom_id), 4) AS hydrogen_percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, carcinogenic FROM molecule AS m JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE m.molecule_id = 'TR010' GROUP BY bond_type, carcinogenic ORDER BY COUNT(bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND m.label = '-' GROUP BY m.molecule_id ORDER BY m.molecule_id ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT bond_id) AS bond_count FROM connected WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12';\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2 FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE b.molecule_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS connection_count FROM connected WHERE atom_id LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT a.element FROM atom a WHERE a.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id LIKE '21%' AND a.atom_id LIKE '%25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "423": "SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 'p' INTERSECT SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id2 = a.atom_id WHERE a.element = 'n';\t----- bird -----\ttoxicology",
    "424": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = ' = ' GROUP BY m.molecule_id, m.label ORDER BY COUNT(b.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bond_count FROM ( SELECT COUNT(DISTINCT bond_id) AS bond_count FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'i' ) GROUP BY atom_id ) AS subquery;\t----- bird -----\ttoxicology",
    "426": "SELECT DISTINCT a.element FROM atom a WHERE a.atom_id NOT IN ( SELECT c.atom_id FROM connected c );\t----- bird -----\ttoxicology",
    "427": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#' AND a1.molecule_id = 'TR041';\t----- bird -----\ttoxicology",
    "428": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a1.element, a2.element FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(T2.bond_id), 5) AS proportion FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT c.atom_id) AS total_atoms FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '#' AND (a.element = 'p' OR a.element = 'br');\t----- bird -----\ttoxicology",
    "432": "SELECT (COUNT(CASE WHEN T3.element = 'cl' THEN 1 ELSE NULL END) * 100.0 / COUNT(T3.atom_id)) AS percent FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT a1.element, a2.element FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT (COUNT(CASE WHEN a.element = 'cl' THEN 1 ELSE NULL END) * 100.0 / COUNT(m.molecule_id)) AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT COUNT(DISTINCT T1.element) AS toxicology_element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "436": "SELECT SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) / COUNT(a.atom_id) AS hydrogen_ratio, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id = 'TR006' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id FROM molecule m WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(m.molecule_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(DISTINCT s.CDSCode) AS NumberOfSchools FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.AvgScrMath > 400 AND sc.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode FROM frpm WHERE (Enrollment__K_12__ = 0 OR Enrollment__K_12__ IS NULL) AND (Enrollment__Ages_5_17__ = 0 OR Enrollment__Ages_5_17__ IS NULL) AND (Enrollment__K_12__ + Enrollment__Ages_5_17__ > 500);\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(T2.`Percent (%) Eligible Free (Ages 5-17)`) AS highest_eligible_free_rate FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead > 500 AND T1.AvgScrMath > 500 AND T1.AvgScrWrite > 500 AND T1.NumGE1500 / T1.NumTstTakr > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.CDSCode, s.CharterNum, AVG(s.AvgScrWrite) AS avg_score FROM satscores s WHERE s.AvgScrWrite > 499 GROUP BY s.CDSCode, s.CharterNum ORDER BY avg_score DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, CONCAT(s.Street, ', ', s.City, ', ', s.State, ' ', s.Zip) AS FullStreetAddress FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT DISTINCT s.School FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND s.`NumGE1500` >= 1500;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT DISTINCT s.School, s.FundingType FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Riverside' AND f.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.School, CONCAT(s.Street, ', ', s.City, ', ', s.State, ' ', s.Zip) AS FullCommunicationAddress FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Monterey' AND f.`Free Meal Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, s.OpenDate, s.ClosedDate, AVG(sats.AvgScrWrite) AS AverageScoreInWriting FROM schools s JOIN satscores sats ON s.CDSCode = sats.cds WHERE (s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01') GROUP BY s.School, s.OpenDate, s.ClosedDate;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.FundingType = 'Locally Funded' AND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > ( SELECT AVG(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.FundingType = 'Locally Funded' )\t----- bird -----\tcalifornia_schools",
    "448": "SELECT s.School, f.`Percent (%) Eligible Free (K-12)` AS EligibleFreeRate FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode ORDER BY f.`Percent (%) Eligible Free (K-12)` DESC LIMIT 10, 2;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT s.School, f.`FRPM Count (K-12)`, f.`Enrollment (K-12)`, (f.`FRPM Count (K-12)` / f.`Enrollment (K-12)`) AS EligibleFreeReducedMealRate FROM frpm f JOIN schools s ON f.`School Code` = s.CDSCode WHERE f.`NSLP Provision Status` = '66' ORDER BY f.`FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode ORDER BY f.Percent_('% Eligible FRPM (K-12)') ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT AdmFName1, AdmLName1, AdmFName2, AdmLName2, AdmFName3, AdmLName3 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.NumGE1500 = ( SELECT MAX(NumGE1500) FROM frpm ) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.NumTstTakr) AS average_test_takers FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.County = 'Fresno' AND sc.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT T1.Phone FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.District = 'Fresno Unified' ORDER BY T2.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.cds, s.cname, s.dname, s.sname, AVG(s.AvgScrRead) AS avg_reading_score FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.Virtual = 'F' GROUP BY s.cds, s.cname, s.dname, s.sname ORDER BY s.cname, avg_reading_score DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.School, AVG(s.AvgScrWrite) AS AverageWritingScore FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.School Name = 'Ricci Ulrich' GROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.State, SUM(f.Enrollment (K-12)) AS TotalEnrollees FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.DOC = 31 GROUP BY s.State ORDER BY TotalEnrollees DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(CDSCode) / 12 AS monthly_average_schools FROM schools WHERE County = 'Alameda' AND DOC = '52' AND YEAR(OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "458": "SELECT (COUNT(CASE WHEN DOC = 54 THEN 1 END) / COUNT(CASE WHEN DOC = 52 THEN 1 END)) AS ratio FROM schools WHERE County = 'Orange';\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.Street, s.School FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode ORDER BY f.AvgScrMath DESC LIMIT 6, 1;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(DISTINCT T1.CDSCode) AS total_schools FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T1.Charter = 0 AND T2.`Percent (%) Eligible Free (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT SUM(Enrollment_5_17) AS Total_Students FROM frpm WHERE School = 'State Special School' AND `County Name` = 'Fremont' AND `Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School, f.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Los Angeles' AND s.GSserved = 'K-9' GROUP BY s.School, f.`Percent (%) Eligible FRPM (Ages 5-17)` ORDER BY s.School;\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS NumberOfSchools FROM schools WHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY NumberOfSchools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools ORDER BY ABS(Longitude) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(DISTINCT City) AS NumberOfCities, COUNT(DISTINCT `School`) AS NumberOfSchools FROM frpm WHERE `NSLP Provision Status` = 'Multiple Provision Types' AND Low Grade = 'K' AND High Grade = '8';\t----- bird -----\tcalifornia_schools",
    "466": "SELECT DISTINCT CAST(free_meal_count_k12 AS DECIMAL(10, 2)) / enrollment_k12 * 100 AS percent_eligible_free_k12, district_code FROM frpm JOIN schools ON frpm.school_code = schools.CDSCode WHERE AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND City = 'City of San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND ( (SOC = '62' AND DOC = '54') OR (SOC = '62' AND DOC = '54') );\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT t.account_id) AS number_of_accounts FROM trans t JOIN account a ON t.account_id = a.account_id JOIN client c ON a.district_id = c.district_id JOIN district d ON c.district_id = d.district_id WHERE t.type = 'POPLATEK PO OBRATU' AND d.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(DISTINCT district_id) AS no_of_districts FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.gender = 'F' AND T3.A11 BETWEEN 6000 AND 10000;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(DISTINCT c.client_id) AS male_customers FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M' AND d.A3 = 'North Bohemia' AND d.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT T1.account_id, T2.A11 - MIN(T2.A11) AS salary_gap FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' ORDER BY T1.birth_date DESC LIMIT 1;\t----- bird -----\tfinancial",
    "472": "SELECT T1.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id ORDER BY T1.birth_date DESC, T3.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, MIN(l.amount) AS lowest_approved_amount FROM loan l JOIN account a ON l.account_id = a.account_id WHERE YEAR(l.date) = 1997 GROUP BY a.account_id ORDER BY lowest_approved_amount LIMIT 1;\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id, MAX(l.amount) AS highest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE YEAR(l.date) = 1993 AND l.duration > 12 GROUP BY a.account_id ORDER BY highest_approved_amount DESC;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT c.client_id) AS female_customers FROM client c JOIN account a ON c.client_id = a.account_id JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND d.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT d.A2 FROM district d JOIN client c ON d.district_id = c.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT (COUNT(CASE WHEN T2.gender = 'M' THEN 1 END) * 100.0 / COUNT(T2.gender)) AS male_percentage FROM district AS T1 INNER JOIN client AS T2 ON T2.district_id = T1.district_id WHERE T1.A3 = 'south Bohemia' ORDER BY T1.A4 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "478": "SELECT (SUM(CASE WHEN t1.date = '1998-12-27' THEN t1.balance ELSE 0 END) - SUM(CASE WHEN t1.date = '1993-03-22' THEN t1.balance ELSE 0 END)) * 100.0 / SUM(CASE WHEN t1.date = '1993-03-22' THEN t1.balance ELSE 0 END) AS increase_rate FROM trans t1 JOIN loan l ON t1.account_id = l.account_id WHERE l.date = '1993-07-05' ORDER BY t1.date LIMIT 1;\t----- bird -----\tfinancial",
    "479": "SELECT (SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) / SUM(l.amount)) * 100 AS percentage FROM loan l;\t----- bird -----\tfinancial",
    "480": "SELECT (COUNT(CASE WHEN l.status = 'C' THEN 1 END) * 100.0 / COUNT(l.loan_id)) AS percentage_running_no_issue FROM loan l WHERE l.amount < 100000;\t----- bird -----\tfinancial",
    "481": "SELECT d.A2 AS district, d.A3 AS state, ( (d.A13 - d.A12) / d.A12 ) * 100 AS unemployment_rate_increment FROM district d JOIN client c ON d.district_id = c.district_id JOIN loan l ON c.client_id = l.account_id WHERE l.status = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT T3.A2 AS district_name, COUNT(T1.client_id) AS female_count FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.gender = 'F' GROUP BY T3.A2 ORDER BY female_count DESC LIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) AS approved_loans_count FROM loan l JOIN account a ON l.account_id = a.account_id WHERE a.frequency = 'POPLATEK MESICNE' AND l.amount >= 250000 AND l.status = 'APPROVED' AND l.date BETWEEN '1995-01-01' AND '1997-12-31';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account_id) AS running_contracts FROM loan WHERE status = 'C' AND account_id IN ( SELECT account_id FROM account WHERE district_id = 1 );\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(DISTINCT T2.client_id) AS male_clients FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'M' AND YEAR(T1.A15) = 1995 ORDER BY T1.A15 DESC LIMIT 1, 1;\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name, COUNT(t.trans_id) AS withdrawal_count FROM trans t JOIN account a ON t.account_id = a.account_id JOIN client c ON a.client_id = c.client_id JOIN district d ON c.district_id = d.district_id WHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%' GROUP BY d.A2 ORDER BY withdrawal_count DESC LIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account_id) AS running_contracts FROM loan WHERE status = 'C' AND district_id = 1;\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M' AND YEAR(T2.date) = 1995 ORDER BY T1.A15 DESC LIMIT 1, 1;\t----- bird -----\tfinancial",
    "489": "SELECT t.account_id FROM trans t JOIN card c ON t.account = c.card_id WHERE t.type = 'VYBER KARTOU' AND t.amount < ( SELECT AVG(amount) FROM trans WHERE YEAR(t.date) = 1998 ) AND YEAR(t.date) = 1998;\t----- bird -----\tfinancial",
    "490": "SELECT t1.type FROM account AS t1 JOIN client AS t2 ON t1.account_id = t2.client_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.type != 'OWNER' AND t3.A11 > 8000 AND t3.A11 < 9000 GROUP BY t1.type;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(A15) AS average_crimes FROM district WHERE A15 > 4000 AND EXISTS ( SELECT 1 FROM account WHERE account_id = district.district_id AND YEAR(date) >= 1997 )\t----- bird -----\tfinancial",
    "492": "SELECT t.amount FROM trans t JOIN client c ON t.account_id = c.client_id WHERE c.client_id = 3356 AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT (COUNT(CASE WHEN c.gender = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_women FROM client c JOIN account a ON c.client_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE d.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT (SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1997 THEN l.amount ELSE 0 END) - SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1996 THEN l.amount ELSE 0 END)) / SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1996 THEN l.amount ELSE 0 END) * 100 AS growth_rate FROM loan l JOIN account a ON l.account_id = a.account_id JOIN client c ON a.district_id = c.district_id WHERE c.gender = 'M';\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(DISTINCT account_id) AS request_count, SUM(CASE WHEN k_symbol = '3539' THEN 1 ELSE 0 END) AS total_debit_aim FROM trans WHERE account_id = 3;\t----- bird -----\tfinancial",
    "496": "SELECT (COUNT(DISTINCT CASE WHEN c.gender = 'M' THEN d.client_id END) * 100.0 / COUNT(DISTINCT d.client_id)) AS male_percentage FROM disp d JOIN client c ON d.client_id = c.client_id WHERE d.type = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "497": "SELECT T1.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC, T3.amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "498": "SELECT AVG(l.amount) AS average_loan_amount FROM loan l JOIN trans t ON l.account_id = t.account_id WHERE l.status = 'C' AND t.operation = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age FROM client c JOIN card ON c.client_id = card.disp_id JOIN disp d ON card.disp_id = d.disp_id WHERE card.type = 'gold' AND d.type = 'OWNER';\t----- bird -----\tfinancial"
}