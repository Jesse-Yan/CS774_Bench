{
    "0": "SELECT SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS ratio FROM customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT T1.`CustomerID` FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2012%' AND T1.Segment = 'LAM' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'SME' )\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN T3.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN T3.Consumption ELSE 0 END) AS DIFFERENCE FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T2.TransactionID = T3.CustomerID WHERE T3.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT `Date` FROM yearmonth GROUP BY `Date` ORDER BY SUM(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT `Date` FROM yearmonth WHERE `Date` LIKE '2013%' ORDER BY `Consumption` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'SME' ) - ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'LAM' ) AS SME_LAM, ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'LAM' ) - ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'KAM' ) AS LAM_KAM, ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'KAM' ) - ( SELECT AVG(Consumption) FROM yearmonth WHERE `Date` LIKE '2013%' AND Segment = 'SME' ) AS KAM_SME\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT segment ,MAX(percentage_increase) ,MIN(percentage_increase) FROM ( SELECT segment ,CASE WHEN (SUM(CASE WHEN YEAR(STR_TO_DATE(Date,'%Y-%m-%d')) = 2013 THEN 1 ELSE 0 END) - SUM(CASE WHEN YEAR(STR_TO_DATE(Date,'%Y-%m-%d')) = 2012 THEN 1 ELSE 0 END)) / SUM(CASE WHEN YEAR(STR_TO_DATE(Date,'%Y-%m-%d')) = 2013 THEN 1 ELSE 0 END) * 100 > 0 THEN (SUM(CASE WHEN YEAR(STR_TO_DATE(Date,'%Y-%m-%d')) = 2013 THEN 1 ELSE 0 END) - SUM(CASE WHEN YEAR(STR_TO_DATE(Date,'%Y-%m-%d')) = 2012 THEN 1 ELSE 0 END)) / SUM(CASE WHEN YEAR(STR_TO_DATE(Date,'%Y-%m-%d')) = 2013 THEN 1 ELSE 0 END) * 100 ELSE 0 END AS percentage_increase FROM yearmonth WHERE Currency = 'EUR' GROUP BY segment ) AS T\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT SUM(CASE WHEN Country = 'CZE' THEN 1 ELSE 0 END) - SUM(CASE WHEN Country = 'SVK' THEN 1 ELSE 0 END) AS diff FROM gasstations\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS difference FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT CAST(SUM(CASE WHEN T1.Consumption > 46.73 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CAST(SUM(CASE WHEN `Consumption` > 528.3 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(`CustomerID`) FROM yearmonth WHERE `Date` = '201202'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) FROM yearmonth WHERE YEAR(STR_TO_DATE(Date,'%Y-%m-%d')) = 2012\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Date = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T3.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT T1.`Time` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11 GROUP BY T1.`Time`\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND STR_TO_DATE(T1.Date, '%Y-%m-%d') > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT DISTINCT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.`Date` = '2012-08-23' AND T1.`Time` = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST(SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (SUM(CASE WHEN YEAR(Date) = 2012 THEN Consumption ELSE 0 END) - SUM(CASE WHEN YEAR(Date) = 2013 THEN Consumption ELSE 0 END)) / SUM(CASE WHEN YEAR(Date) = 2012 THEN Consumption ELSE 0 END) FROM yearmonth WHERE Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT CAST(SUM(CASE WHEN T2.Segment = 'premium' THEN 1 ELSE 0 END) AS DECIMAL(10, 4)) * 100 / COUNT(T2.Segment) FROM gasstations AS T1 INNER JOIN customers AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(T1.Amount) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = 38508 AND T1.Date = '201201'\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT T1.CustomerID, T2.Segment, T2.Currency, AVG(T2.Price) AS average_price FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID, T2.Segment, T2.Currency ORDER BY SUM(T1.Amount) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.TransactionID = T2.CustomerID WHERE T1.Price / T1.Amount > 29.00 AND T2.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT T1.link_to_major FROM member AS T1 WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member WHERE T3.position = 'Student_Club' GROUP BY T1.event_id HAVING COUNT(T1.event_id) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT T1.event_name FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type != 'fundraiser' GROUP BY T1.event_name HAVING COUNT(T2.link_to_member) > 20\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'IL'\t----- bird -----\tstudent_club",
    "36": "SELECT T1.approved FROM expense AS T1 INNER JOIN attendance AS T2 ON T1.`link_to_member` = T2.`link_to_member` INNER JOIN event AS T3 ON T2.`link_to_event` = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(T3.cost) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN expense AS T3 ON T2.link_to_member = T3.link_to_member WHERE T1.first_name = 'Elijah' AND T1.last_name = 'Allen' AND MONTH(T3.expense_date) BETWEEN 9 AND 10\t----- bird -----\tstudent_club",
    "38": "SELECT SUM(CASE WHEN YEAR(T1.event_date) = 2019 THEN T2.amount ELSE 0 END) - SUM(CASE WHEN YEAR(T1.event_date) = 2020 THEN T2.amount ELSE 0 END) AS diff FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Student_Club'\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE date_received = '2019-09-14' AND source = 'Fundraising'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT T1.event_status FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Post Cards, Posters' AND T2.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "42": "SELECT T1.link_to_major FROM member AS T1 WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Connor' AND T1.last_name = 'Hilton' AND T2.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT COUNT(T1.link_to_event) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Yearly Kickoff' AND T1.category = 'Advertisement' AND T1.amount > ( SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Meeting' AND T1.category = 'Advertisement' )\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(*) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T2.link_to_major = T1.major_id WHERE T2.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY T2.spent / T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(remaining) FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(remaining) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event_name FROM event ORDER BY cost ASC LIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.cost ELSE 0 END) AS DECIMAL(10, 2)) * 100 / SUM(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T2.link_to_event = T1.event_id\t----- bird -----\tstudent_club",
    "59": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Physics Teaching' AND T1.position = 'Student_Club'\t----- bird -----\tstudent_club",
    "61": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T3.event_id = T2.link_to_event WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT T1.cost FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker' AND T1.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "64": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY T2.remaining LIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT T1.type, SUM(T1.cost) FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Meeting' AND T1.approved = 'Yes' GROUP BY T1.type\t----- bird -----\tstudent_club",
    "66": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' ORDER BY T1.amount ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T2.link_to_member) FROM income AS T1 INNER JOIN income AS T2 ON T1.link_to_member = T2.link_to_member WHERE T1.amount = 50 AND T1.link_to_member = 'Student_Club'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name FROM event WHERE event_date BETWEEN '2019-03-15' AND '2020-03-20' AND status = 'Closed' AND type = 'Game'\t----- bird -----\tstudent_club",
    "75": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > ( SELECT AVG(cost) FROM expense )\t----- bird -----\tstudent_club",
    "76": "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT (COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE NULL END) - COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE NULL END)) * 100.0 / COUNT(CASE WHEN SEX = 'M' THEN 1 ELSE NULL END) AS deviation_percentage FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT CAST(SUM(CASE WHEN YEAR(Birthday) > 1930 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) / SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS ratio FROM Examination WHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Diagnosis, `Examination Date` FROM Examination WHERE ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT ID , TIMESTAMPDIFF(YEAR , Birthday , CURDATE()) AS age FROM Examination WHERE RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT T1.ID, T1.SEX, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND YEAR(T1.Description) = 1997 AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Thrombosis` = 1 AND T2.SEX = 'F' AND YEAR(T1.`Examination Date`) = 1997\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT T2.Symptoms, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT T2.`Examination Date`, TIMESTAMPDIFF(YEAR, T1.Birthday, T2.`Examination Date`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) AS male , SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS female FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA <= 8.0\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT ID) FROM Examination WHERE YEAR(`Examination Date`) BETWEEN 1990 AND 1993 AND YEAR(Birthday) < 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT T1.`First Date`, T2.HGB, T2.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T2.HGB DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT T2.`aCL IgM` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Description = '1994-02-19' AND T2.`Examination Date` = '1993-11-12' AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (SUM(CASE WHEN `Date` LIKE '1981-11-%' THEN T-CHO ELSE 0 END) - SUM(CASE WHEN `Date` LIKE '1981-12-%' THEN T-CHO ELSE 0 END)) / SUM(CASE WHEN `Date` LIKE '1981-12-%' THEN T-CHO ELSE 0 END) AS decrease_rate FROM Laboratory WHERE ID = ( SELECT ID FROM Patient WHERE Birthday = '1959-02-18' )\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 2 AND T1.ANA = 'S' AND T1.`aCL IgM` > ( SELECT AVG(`aCL IgM`) FROM Examination ) * 1.2\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`Examination Date` LIKE '1991-10%' AND T2.T-BIL < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(T2.ALB) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.PLT > 400 AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE YEAR(T1.Birthday) = 1980 AND T2.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT T1.ID, T1.UA FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 57266 AND (T1.UA > 8.0 AND T2.SEX = 'M' OR T1.UA > 6.5 AND T2.SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT ID FROM Laboratory WHERE GPT >= 60 AND SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Diagnosis FROM Examination WHERE GPT > 60 ORDER BY Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT ID ,SEX ,Birthday FROM Patient WHERE ID IN ( SELECT ID FROM Examination WHERE UN BETWEEN 28 AND 30 )\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT T1.SEX, COUNT(T2.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.T-BIL >= 2.0 GROUP BY T1.SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(TIMESTAMPDIFF(YEAR, Birthday, CURDATE())) AS average_age FROM Patient WHERE SEX = 'M' AND Diagnosis = 'high cholesterol'\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND TIMESTAMPDIFF(YEAR, T1.Birthday, CURDATE()) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CPK > 250 AND YEAR(T1.Birthday) BETWEEN 1936 AND 1956\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT ID ,SEX ,TIMESTAMPDIFF(YEAR,Birthday,CURDATE()) AS age FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE GLU >= 180 ) AND ID IN ( SELECT ID FROM Laboratory WHERE T-CHO < 250 )\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Diagnosis, ID, TIMESTAMPDIFF(YEAR, Birthday, CURDATE()) AS Age FROM Patient WHERE RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT ID ,SEX FROM Patient WHERE Diagnosis = 'SLE' AND HGB BETWEEN 10 AND 17 ORDER BY Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT T1.ID, TIMESTAMPDIFF(YEAR, T1.Birthday, CURDATE()) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT >= 52 GROUP BY T1.ID HAVING COUNT(T2.ID) > 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT SUM(PLT < 100) AS lower_than_normal_range, SUM(PLT > 400) AS higher_than_normal_range FROM Laboratory WHERE PLT < 100 OR PLT > 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT T1.ID, T1.First_Date FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE YEAR(T2.`Date`) = 1984 AND T1.SEX = 'M' AND (YEAR(CURDATE()) - YEAR(T1.Birthday)) < 50 AND T2.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday < CURDATE() - INTERVAL 55 YEAR AND T2.PT >= 14\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 3.5 AND 9.0 AND T2.FG <= 150 OR T2.FG >= 450\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.IGG > 900 AND T2.IGG < 2000 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND YEAR(T1.`First Date`) > 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis FROM Examination WHERE IGM <= 40 OR IGM >= 400 GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP = '+' AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND YEAR(CURDATE()) - YEAR(T1.Birthday) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.ANA = 0 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(T1.ID) FROM Examination AS T1 WHERE T1.ana = 0 AND T1.thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SC170 = 'negative' AND T1.Sex = 'F' AND T1.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-') AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Birthday) AS youngest_birthday FROM Patient WHERE ID IN ( SELECT ID FROM Examination WHERE GOT >= 60 )\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND (T1.KCT = '+' OR T1.RVVT = '+' OR T1.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' ORDER BY T1.home_team_goal + T1.away_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT T1.team_long_name FROM Team AS T1 JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id WHERE T2.season = '2009/2010' AND T2.away_team_goal > T2.home_team_goal GROUP BY T1.team_long_name ORDER BY COUNT(T2.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT T2.buildUpPlaySpeed FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id ORDER BY T2.buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY SUM(CASE WHEN T1.home_team_goal = T1.away_team_goal THEN 1 ELSE 0 END) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT TIMESTAMPDIFF(YEAR, birthday, CURDATE()) AS age FROM Player_Attributes WHERE sprint_speed >= 97 AND YEAR(date) BETWEEN 2013 AND 2015\t----- bird -----\teuropean_football_2",
    "133": "SELECT T1.name, COUNT(T2.id) AS matches FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.name ORDER BY matches DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT T1.team_long_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T2.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE STR_TO_DATE(date,'%Y-%m-%d') = STR_TO_DATE('2012-01-01','%Y-%m-%d') )\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST(SUM(CASE WHEN T1.preferred_foot = 'left' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.player_fifa_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE STR_TO_DATE(T2.birthday, '%d/%m/%Y') BETWEEN '1987-01-01' AND '1992-12-31'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(T2.long_shots) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T1.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id WHERE T1.height > 180 ORDER BY T2.heading_accuracy DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2009/2010' GROUP BY T1.name HAVING AVG(T2.home_team_goal) > AVG(T2.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name FROM Player WHERE player_name LIKE '%1970-10%'\t----- bird -----\teuropean_football_2",
    "141": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND T2.date LIKE '2011%'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match WHERE season = '2010/2011' AND country_id = ( SELECT id FROM Country WHERE name = 'Poland' )\t----- bird -----\teuropean_football_2",
    "143": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id ORDER BY T2.finishing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.id = t2.player_fifa_api_id WHERE t1.height > 170 AND STR_TO_DATE(t2.date, '%Y-%m-%d') BETWEEN '2010-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "145": "SELECT AVG(T1.ball_control) - AVG(T2.ball_control) AS diff FROM Player_Attributes AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id JOIN Player AS T3 ON T1.player_api_id = T3.id WHERE T3.player_name = 'Abdou Diallo' OR T3.player_name = 'Aaron Appindangoye'\t----- bird -----\teuropean_football_2",
    "146": "SELECT T1.player_name FROM Player AS T1 WHERE T1.player_name = 'Aaron Lennon' ORDER BY T1.birthday DESC LIMIT 1 UNION SELECT T1.player_name FROM Player AS T1 WHERE T1.player_name = 'Abdelaziz Barrada' ORDER BY T1.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.preferred_foot = 'left' AND T2.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE STR_TO_DATE(T1.birthday, '%d/%m/%Y') < '1986-01-01' AND T2.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Belgium Jupiler League' AND SUBSTR(T1.`date`, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2008/2009' GROUP BY T1.name ORDER BY COUNT(T2.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT (T1.overall_rating - T2.overall_rating) * 100.0 / T2.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ariel Borysiuk' AND T2.player_name = 'Paulin Puel'\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(T1.chanceCreationPassing), T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date = '2016-06-23' ORDER BY T1.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT T2.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.id WHERE T2.player_name = 'Francesco Migliore' AND T1.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT T1.date FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.id WHERE T2.player_name = 'Kevin Constant' ORDER BY T1.crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Marko Arnautovic' AND T2.date LIKE '2007-02-22%' AND T2.date LIKE '%2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT CAST(SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) - SUM(CASE WHEN T1.player_name = 'Jordan Bowery' THEN T2.overall_rating ELSE 0 END) AS DECIMAL(10, 2)) * 100 / SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id ORDER BY T2.height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "166": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT T1.team_short_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(T1.player_api_id) FROM Player AS T1 WHERE T1.player_name LIKE 'Aaron%' AND T1.birthday > '1990'\t----- bird -----\teuropean_football_2",
    "169": "SELECT ( SELECT jumping FROM Player_Attributes WHERE player_api_id = 6 ) - ( SELECT jumping FROM Player_Attributes WHERE player_api_id = 23 ) AS difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id FROM Player_Attributes ORDER BY potential ASC, preferred_foot = 'right' LIMIT 4\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes ) AND T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT T1.home_team_goal, T1.away_team_goal FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.date LIKE '2008-09-24%' AND T2.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT T1.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT T2.finishing, T2.curve FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id ORDER BY T1.weight DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "175": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY COUNT(T2.id) DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT T1.team_long_name FROM Team AS T1 JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id ORDER BY T2.away_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "179": "SELECT T1.driverRef FROM driverStandings AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.raceId = 20 AND T1.position = 5\t----- bird -----\tformula_1",
    "180": "SELECT T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 19 AND T2.q2 = ( SELECT MIN(q2) FROM qualifying WHERE raceid = 19 )\t----- bird -----\tformula_1",
    "181": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T2.forename = 'Bruno' AND T2.surname = 'Senna' AND T1.position = 354\t----- bird -----\tformula_1",
    "185": "SELECT T1.number FROM qualifying AS T1 JOIN results AS T2 ON T1.qualifyId = T2.raceId WHERE T2.position = 1 AND T1.q3 = '1:54' AND T1.raceId = 903\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(T1.driverid) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = 'Bahrain Grand Prix' AND T2.year = 2007 AND T1.position IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 592 AND T2.time IS NOT NULL ORDER BY T1.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT T1.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T2.lap = 161 AND T2.time = '1:27'\t----- bird -----\tformula_1",
    "189": "SELECT T1.location, T1.lat, T1.lng FROM circuits AS T1 JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T2.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 9 ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T2.q3 = '1:33' AND T2.raceid = 45\t----- bird -----\tformula_1",
    "192": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 872 ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT T1.nationality FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid ORDER BY T2.fastestlapspeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "195": "SELECT (T1.fastestLapSpeed - T2.fastestLapSpeed) * 100 / T2.fastestLapSpeed FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId = ( SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta' ) AND T1.raceId = 853 AND T2.raceId = 854\t----- bird -----\tformula_1",
    "196": "SELECT CAST(SUM(CASE WHEN T1.position IS NOT NULL THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.position) AS completion_rate FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races ORDER BY YEAR(date) ASC, MONTH(date) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "198": "SELECT T1.forename, T1.surname, T2.points FROM drivers AS T1 INNER JOIN driverstandings AS T2 ON T1.driverid = T2.driverid ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT T1.time, T2.forename, T2.surname, T3.name FROM laptimes AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T1.raceid = T3.raceid ORDER BY T1.milliseconds LIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(T2.milliseconds) AS average_lap_time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Malaysian Grand Prix' AND T3.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT CAST(SUM(CASE WHEN T2.position > 1 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T2.position) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.year >= 2010 AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "202": "SELECT T1.forename, T1.surname, T1.nationality, MAX(T2.wins) AS max_wins, MAX(T2.points) AS max_points FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.forename, T1.surname, T1.nationality ORDER BY max_wins DESC LIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT T1.dob, T1.surname FROM drivers AS T1 WHERE T1.nationality = 'Japanese' ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT T1.name AS race_name, T2.name AS circuit_name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE MONTH(T1.date) = 9 AND YEAR(T1.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T2.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT T1.name AS race_name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' ORDER BY T2.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT T1.name, T2.points FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T1.year ASC LIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT CAST(SUM(CASE WHEN T1.country = 'Germany' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(*) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT T1.country FROM circuits AS T1 JOIN races AS T2 ON T1.circuitid = T2.circuitid JOIN results AS T3 ON T2.raceid = T3.raceid JOIN drivers AS T4 ON T3.driverid = T4.driverid ORDER BY T4.dob LIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2007 AND T2.position = 1\t----- bird -----\tformula_1",
    "213": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T2.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT T2.positionOrder FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Chinese Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T1.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT T2.time FROM driverstandings AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.raceid = ( SELECT raceid FROM races WHERE name = 'Chinese Grand Prix' AND YEAR = 2008 ) AND T1.position = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT T1.driverid) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = '2008 Chinese Grand Prix' AND T1.position IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT (SUM(T1.milliseconds) - SUM(T2.milliseconds)) * 100.0 / SUM(T2.milliseconds) FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.raceId = ( SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008 ) AND T1.position = 1 AND T2.position = 2\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Adelaide'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(T1.points) FROM constructorstandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorid = T2.constructorid WHERE T2.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T2.raceid = 291 AND T2.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(T1.constructorId) FROM constructorStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.points = 0 AND T1.constructorId IN ( SELECT constructorId FROM constructors WHERE nationality = 'Japanese' ) AND T2.raceId IN ( SELECT raceId FROM races GROUP BY raceId HAVING COUNT(raceId) = 2 )\t----- bird -----\tformula_1",
    "223": "SELECT CAST(SUM(CASE WHEN T1.nationality = 'Japanese' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.driverid) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T2.time IS NOT NULL AND T2.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "224": "SELECT AVG(T1.time) AS avg_time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.year < 1975 AND T1.position = 1\t----- bird -----\tformula_1",
    "225": "SELECT T1.fastestLap FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T1.position = 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT CAST(SUM(CASE WHEN T1.dob < 1985 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.driverid) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.year BETWEEN 2000 AND 2005 AND T1.laps > 50\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(T1.driverid) FROM Laptimes AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T2.nationality = 'French' AND T1.time < '02:00:00'\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 ORDER BY T1.dob DESC LIMIT 3;\t----- bird -----\tformula_1",
    "231": "SELECT T1.driverRef FROM drivers AS T1 WHERE T1.nationality = 'German' ORDER BY T1.dob LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT T1.driverid, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.dob = '1971-01-01' AND T2.fastestlaptime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(*) AS held_times, location, CONCAT(lat, ',', lng) AS coordinates FROM circuits WHERE country = 'Austria' GROUP BY location, CONCAT(lat, ',', lng)\t----- bird -----\tformula_1",
    "235": "SELECT T2.year, T2.name, T2.date, T2.time FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId ORDER BY T3.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN pitstops AS T2 ON T1.driverid = T2.driverid WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverid ORDER BY AVG(T2.duration) ASC LIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT T1.forename, T1.surname, T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T2.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT T1.constructorRef, T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2009 AND T3.name = 'Singapore Grand Prix' ORDER BY T2.position LIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT T1.name, T1.nationality, T2.points FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid INNER JOIN circuits AS T3 ON T3.circuitid = T2.circuitid WHERE T2.position = 1 AND T3.name = 'Marina Bay Street Circuit' AND T2.raceid = ( SELECT T4.raceid FROM races AS T4 INNER JOIN circuits AS T5 ON T5.circuitid = T4.circuitid WHERE T5.name = 'Marina Bay Street Circuit' AND T4.year = 2008 )\t----- bird -----\tformula_1",
    "242": "SELECT T1.forename, T1.surname, T1.nationality, T2.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T1.statusId = 3\t----- bird -----\tformula_1",
    "244": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid ORDER BY T2.time ASC LIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT T1.name, T2.time FROM circuits AS T1 INNER JOIN laptimes AS T2 ON T1.circuitid = T2.raceid WHERE T1.country = 'Italy'\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.power_id = T3.id INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id WHERE T4.colour = 'Blue' AND T3.attribute_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT T1.superhero_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT T3.colour, COUNT(T1.id) AS cnt FROM superhero AS T1 INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' GROUP BY T3.colour ORDER BY cnt DESC\t----- bird -----\tsuperhero",
    "251": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T3.power_name = 'Super Strength' AND T1.publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' )\t----- bird -----\tsuperhero",
    "252": "SELECT T.publisher_name FROM ( SELECT T1.publisher_name, T2.attribute_name, MIN(T2.attribute_value) AS min_attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'Speed' GROUP BY T1.publisher_name, T2.attribute_name ) AS T ORDER BY T.min_attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Gold'\t----- bird -----\tsuperhero",
    "254": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'Intelligence' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'Strength' AND T2.attribute_value = 100 AND T1.gender_id = ( SELECT id FROM gender WHERE gender = 'Female' )\t----- bird -----\tsuperhero",
    "259": "SELECT CAST(SUM(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.id) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN alignment AS T3 ON T3.id = T2.alignment_id WHERE T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "260": "SELECT ( SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ) - ( SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ) AS difference\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T3.id = T2.hero_id INNER JOIN gender AS T4 ON T4.id = T3.gender_id WHERE T4.gender = 'Male' GROUP BY T1.power_name ORDER BY COUNT(T1.power_name) DESC LIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT T1.superhero_name FROM superhero AS T1 LEFT JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.attribute_name = 'Eye Color' AND T2.attribute_value = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT T1.hair_colour FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.height_cm = 185 AND T2.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT CAST(SUM(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.id) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.gender_id = ( SELECT id FROM gender WHERE gender = 'Male' ) AND T1.weight_kg > ( SELECT AVG(weight_kg) * 0.79 FROM superhero )\t----- bird -----\tsuperhero",
    "269": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT T1.id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T2.id = T1.power_id WHERE T2.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT T1.full_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.attribute_name = 'durability' AND T4.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T1.gender_id = ( SELECT id FROM gender WHERE gender = 'Female' )\t----- bird -----\tsuperhero",
    "274": "SELECT T1.superhero_name, T3.publisher_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.hair_colour_id = T2.eye_colour_id AND T2.hair_colour_id = T2.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT CAST(SUM(CASE WHEN T1.skin_colour_id = ( SELECT id FROM colour WHERE colour = 'Blue' ) THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.id) FROM superhero AS T1 WHERE T1.gender_id = ( SELECT id FROM gender WHERE gender = 'Female' )\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(T2.power_name) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero_name FROM superhero WHERE alignment_id = ( SELECT id FROM alignment WHERE alignment = 'Neutral' )\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' )\t----- bird -----\tsuperhero",
    "281": "SELECT CAST(SUM(CASE WHEN T1.gender = 'Female' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT ( SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky' ) - ( SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler' ) AS difference\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height FROM superhero\t----- bird -----\tsuperhero",
    "284": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT T1.attribute_name, T2.attribute_value FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id INNER JOIN superhero AS T3 ON T3.id = T2.hero_id WHERE T3.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T2.id = T1.eye_colour_id WHERE T2.colour = 'Blue' INNER JOIN colour AS T3 ON T3.id = T1.hair_colour_id WHERE T3.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT T1.publisher_name FROM publisher AS T1 JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT CAST(SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.id) FROM superhero AS T1\t----- bird -----\tsuperhero",
    "290": "SELECT CAST(SUM(CASE WHEN T1.gender_id = 1 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) / SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END) AS ratio FROM superhero AS T1\t----- bird -----\tsuperhero",
    "291": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) AS diff FROM superhero AS T1 WHERE T1.weight_kg = 0\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name\t----- bird -----\tsuperhero",
    "295": "SELECT T1.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT T1.publisher_name, COUNT(T2.id) AS superhero_count FROM publisher AS T1 JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY T1.publisher_name ORDER BY superhero_count DESC LIMIT 1\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users WHERE DisplayName IN ( 'Harlan', 'Jarrod Dixon' ) )\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE YEAR(CreationDate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(Id) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT T1.OwnerDisplayName FROM posts AS T1 WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT T1.UserDisplayName FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Examples for teaching: Correlation does not mean causation' ORDER BY T1.CreationDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score > 19\t----- bird -----\tcodebase_community",
    "304": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T2.Id = T1.ExcerptPostId WHERE T1.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST(SUM(CASE WHEN T1.OwnerUserId IN ( SELECT Id FROM users WHERE Age > 65 ) THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.Id) FROM posts AS T1 WHERE T1.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT COUNT(T1.FavoriteCount) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.CreationDate = '2014-04-23 20:29:39' AND T2.UserId = 3025\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN T1.ClosedDate IS NULL THEN 'not well-finished' ELSE 'well-finished' END AS status FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.CreationDate = '2013-07-12 09:08:18.0' AND T2.UserId = 23853\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT T1.UserDisplayName FROM comments AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST(COUNT(T1.Id) AS DECIMAL(10, 2)) / COUNT(T2.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT DISTINCT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT T1.OwnerDisplayName FROM posts AS T1 WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT T2.Text FROM postHistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.UserId = T2.UserId AND T1.Text = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T2.PostId IN ( SELECT Id FROM posts WHERE Title LIKE '%variance%' )\t----- bird -----\tcodebase_community",
    "319": "SELECT AVG(T1.ViewCount) AS avg_view_count, T1.Title, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Tags LIKE '%<humor>%' GROUP BY T1.Title, T2.Text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) FROM badges GROUP BY UserId HAVING COUNT(Id) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT DISTINCT T1.Id FROM posts AS T1 INNER JOIN ( SELECT PostId, COUNT(*) AS cnt FROM postHistory GROUP BY PostId HAVING cnt = 1 ) AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT CAST(SUM(CASE WHEN YEAR(Date) = 2010 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / SUM(CASE WHEN YEAR(Date) = 2011 THEN 1 ELSE 0 END) AS percentage_difference FROM badges WHERE Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(T1.UpVotes) AS average_up_votes, AVG(T1.Age) AS average_user_age FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId GROUP BY T1.Id HAVING COUNT(T2.Id) > 10\t----- bird -----\tcodebase_community",
    "324": "SELECT CAST(SUM(CASE WHEN YEAR(CreationDate) = 2010 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) / SUM(CASE WHEN YEAR(CreationDate) = 2011 THEN 1 ELSE 0 END) AS ratio FROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT T3.TagName FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId INNER JOIN tags AS T3 ON T3.Id = T2.PostId WHERE T1.OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'Mark Meckes' ) AND T1.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(SUM(CASE WHEN T1.Tags LIKE '%<r>%' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(CASE WHEN T2.OwnerDisplayName = 'Mornington' THEN T1.ViewCount ELSE 0 END) - SUM(CASE WHEN T2.OwnerDisplayName = 'Amos' THEN T1.ViewCount ELSE 0 END) AS diff FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(T1.Id) FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE YEAR(T2.CreationDate) = 2010 AND T2.AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(CreationDate) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Autobiographer' ORDER BY T2.Date ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT Id, OwnerDisplayName FROM posts WHERE YEAR(CreationDate) = 2010 ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT CAST(SUM(CASE WHEN YEAR(T1.CreationDate) = 2011 AND T2.Reputation > 1000 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id\t----- bird -----\tcodebase_community",
    "337": "SELECT SUM(T1.ViewCount) AS total_views, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets' ORDER BY T1.LasActivityDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Score = ( SELECT MAX(Score) FROM posts )\t----- bird -----\tcodebase_community",
    "339": "SELECT T2.Text, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Analysing wind data with R' ORDER BY T2.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT CAST(SUM(CASE WHEN T1.Score > 50 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T2.Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT T1.Reputation, T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CommentCount = 1 AND T1.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(SUM(CASE WHEN T1.UpVotes = 0 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "346": "SELECT name FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT name FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "348": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.mtgoId = T1.uuid WHERE T2.types = 'Artifact' AND T2.side IS NULL AND T1.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T1.power = '*' AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT T1.name, T1.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniel'\t----- bird -----\tcard_games",
    "352": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T1.name, T1.artist, T1.isPromo ORDER BY COUNT(T2.id) DESC LIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT T1.format FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid WHERE T2.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(*) FROM cards\t----- bird -----\tcard_games",
    "358": "SELECT CAST(SUM(CASE WHEN T1.language = 'French' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.id) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' AND T2.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B' AND T2.language = 'foreign'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(*) FROM cards;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(T1.id) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.block = 'Commander' AND T1.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT T1.supertypes, T1.subtypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T2.language = 'German'\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.id = T2.uuid WHERE T1.format = 'premodern' AND T2.text = 'This is a triggered mana ability.' AND T1.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.artist = 'Matthew D. Wilson' AND T1.type = 'Creature' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "370": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ravnica' AND T1.baseSetSize = 180\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT CAST(SUM(CASE WHEN T1.language = 'French' AND T1.power IS NULL OR T1.power = '*' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.power) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.multiverseid = T2.multiverseId WHERE T2.power IS NULL OR T2.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T2.scryfallId = T1.uuid WHERE T2.multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) / COUNT(*) FROM cards\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.mcmName = 'Archenemy' AND T2.setCode = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T2.scryfallId = T1.scryfallId WHERE T2.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "378": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT CASE WHEN COUNT(T1.id) > 0 THEN 'Yes' ELSE 'No' END AS Korean_Version FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.multiverseid = T2.multiverseid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.isOnlineOnly FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(T1.id) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.block = 'Ice Age' AND T1.language = 'Italian' AND T1.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT isForeignOnly FROM sets WHERE name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(T1.id) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Italian' AND T2.baseSetSize < 10\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT T1.flavorText FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.setCode = 'Coldsnap' AND T1.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Italian' AND T1.name = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "391": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS DECIMAL(10, 4)) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT CAST(SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(*) FROM cards WHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "393": "SELECT T1.format, T1.name FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T1.format, T1.name ORDER BY COUNT(T1.status) DESC LIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT DISTINCT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT c.name AS card_name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.setCode = 'H0D'\t----- bird -----\tcard_games",
    "396": "SELECT T1.name FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode AND T2.language = 'Japanese' WHERE T2.setCode IS NULL AND T1.name IN ( SELECT T3.name FROM sets AS T3 LEFT JOIN set_translations AS T4 ON T3.code = T4.setCode AND T4.language = 'Korean' WHERE T4.setCode IS NOT NULL )\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT T1.frameVersion, T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.artist = 'Allen Williams' AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(T1.element) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(CASE WHEN bond_type = '-' THEN 1 ELSE 0 END) AS average FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '+' )\t----- bird -----\ttoxicology",
    "401": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(SUM(CASE WHEN T2.element = 'c' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T2.atom_id) FROM bond AS T1 INNER JOIN atom AS T2 ON T1.bond_id = T2.atom_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT T1.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T1.label ORDER BY COUNT(T1.label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond_type FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20' UNION SELECT bond_type FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR004_20' AND T2.atom_id2 = 'TR004_8'\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T1.element = 'i' AND T3.bond_type = '-' AND T1.molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 's' )\t----- bird -----\ttoxicology",
    "409": "SELECT CAST(SUM(CASE WHEN T1.label = '+' AND T2.element != 'f' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "410": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '#' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "411": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id IN ( SELECT bond_id FROM bond WHERE molecule_id = 'TR000' ) ORDER BY T2.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS DECIMAL(10, 5)) * 100 / COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(molecule_id) FROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT CAST(SUM(CASE WHEN T2.element = 'h' THEN 1 ELSE 0 END) AS DECIMAL(10, 4)) * 100 / COUNT(T2.atom_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT T2.element, T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT T3.bond_type, T1.label FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR010' GROUP BY T3.bond_type ORDER BY COUNT(T3.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT T1.molecule_id FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' ORDER BY T1.label ASC LIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.molecule_id = 'TR009' AND (T1.atom_id2 = 'TR009_12' OR T1.atom_id = 'TR009_12')\t----- bird -----\ttoxicology",
    "419": "SELECT T2.bond_type, T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(bond_id) FROM connected WHERE atom_id = 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T2.atom_id = T1.atom_id2 WHERE T1.bond_id IN ( SELECT bond_id FROM bond WHERE molecule_id = 'TR004' )\t----- bird -----\ttoxicology",
    "422": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id BETWEEN '21' AND '25' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT T3.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'p' AND T1.element = 'n'\t----- bird -----\ttoxicology",
    "424": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = ' = ' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(T3.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'i'\t----- bird -----\ttoxicology",
    "426": "SELECT T1.element FROM atom AS T1 LEFT JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.atom_id2 IS NULL\t----- bird -----\ttoxicology",
    "427": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '#' AND T3.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "428": "SELECT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 5) AS proportion FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND (T1.element = 'p' OR T1.element = 'br')\t----- bird -----\ttoxicology",
    "432": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.atom_id) AS percent FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.atom_id LIKE '4%'\t----- bird -----\ttoxicology",
    "436": "SELECT CAST(SUM(CASE WHEN T2.element = 'h' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) / COUNT(T2.element) AS ratio, T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(T1.cds) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode FROM frpm WHERE FRPM_COUNT_K12 + FRPM_COUNT_AGE5_17 > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX( CAST(`T1`.`Free Meal Count (Ages 5-17)` AS DOUBLE) / `T1`.`Enrollment (Ages 5-17)` ) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.cds WHERE CAST(T2.`NumGE1500` AS DOUBLE) / T2.`NumTstTakr` > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT T1.cds, T1.cname, T1.AvgScrWrite, T1.cds FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite > 499 ORDER BY T1.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT T1.School, T1.Street FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Percent (%) Eligible Free (K-12)` > 0.1 AND T2.FRPM_Count_K12 > 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT T1.School, T1.FundingType FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 400 GROUP BY T1.School, T1.FundingType\t----- bird -----\tcalifornia_schools",
    "445": "SELECT T1.`School`, T1.Street, T1.City, T1.State, T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`School Type` = 'High School' AND T1.City = 'Monterey' AND (T2.`Free Meal Count (Ages 15-17)` > 800 OR T2.`FRPM Count (Ages 15-17)` > 800)\t----- bird -----\tcalifornia_schools",
    "446": "SELECT T1.`School`, T1.`Communication Number`, AVG(T2.AvgScrWrite) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.OpenDate > '1991-01-01' OR T1.ClosedDate < '2000-01-01' GROUP BY T1.`School`, T1.`Communication Number`\t----- bird -----\tcalifornia_schools",
    "447": "SELECT T1.`School`, T1.`DOCType` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.FundingType = 'Locally Funded' AND ABS(T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)`) > ( SELECT AVG(ABS(T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)`)) FROM frpm AS T2 INNER JOIN schools AS T1 ON T1.CDSCode = T2.CDSCode WHERE T1.FundingType = 'Locally Funded' )\t----- bird -----\tcalifornia_schools",
    "448": "SELECT CAST(`Free Meal Count (K-12)` AS DOUBLE) / `Enrollment (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 10, 2\t----- bird -----\tcalifornia_schools",
    "449": "SELECT CAST(`T2`.`Free Meal Count (K-12)` AS DOUBLE) / `T2`.`Enrollment (K-12)` AS EligibleFreeRate FROM `frpm` AS `T1` INNER JOIN `schools` AS `T2` ON `T1`.`CDSCode` = `T2`.`CDSCode` WHERE `T2`.`Ownership` = '66' ORDER BY `T2`.`Free Meal Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead / T2.NumTstTakr ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT T1.AdmFName1, T1.AdmLName1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 > 0 ORDER BY T2.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(T2.NumTstTakr) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND T1.District = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT T1.`Phone` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.dname = 'Fresno Unified' ORDER BY T2.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT T1.`School`, T1.`County` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Virtual = 'F' ORDER BY T2.AvgScrRead DESC GROUP BY T1.`School`, T1.`County` LIMIT 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT AVG(T2.AvgScrWrite) AS avg_writing_score, T1.school FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci' AND T1.AdmLName1 = 'Ulrich' GROUP BY T1.school\t----- bird -----\tcalifornia_schools",
    "456": "SELECT T1.State FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.DOC = 31 GROUP BY T1.State ORDER BY SUM(T2.`Enrollment (K-12)`) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT AVG(OpenDate) FROM schools WHERE OpenDate >= 1980 AND OpenDate < 1981 AND DOC = 52 AND State = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT CAST(SUM(CASE WHEN T1.DOC = 54 THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) / SUM(CASE WHEN T1.DOC = 52 THEN 1 ELSE 0 END) AS ratio FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Orange'\t----- bird -----\tcalifornia_schools",
    "459": "SELECT T1.`School`, T1.`Street` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 6, 1\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 0 AND T2.`Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT COUNT(T2.`FRPM Count (Ages 5-17)`) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.District = 'Fremont' AND T2.`Academic Year` = '2014-2015' AND T1.EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT T1.School, T2.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.GSserved = 'K-9' AND T1.County = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT T1.County, COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Virtual = 'F' AND T1.County IN ('San Diego', 'Santa Barbara') GROUP BY T1.County ORDER BY COUNT(T1.CDSCode) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT T1.GSoffered FROM schools AS T1 ORDER BY T1.Longitude DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(DISTINCT T1.City) AS NumberOfCities, COUNT(T1.CDSCode) AS NumberOfSchools FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.GSoffered = 'K-8' AND T1.Magnet = 1 AND T2.`NSLP Provision Status` = 'Multiple Provision Types'\t----- bird -----\tcalifornia_schools",
    "466": "SELECT T2.`Percent (%) Eligible Free (K-12)`, T1.`District` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN `satscores` AS T3 ON T1.CDSCode = T3.cds WHERE T1.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT DISTINCT T1.AdmEmail1 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'San Bernardino' AND T1.City = 'San Bernardino City' AND T1.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND T1.DOCType = 'Unified' AND T1.SOC = '62' AND T1.StatusType = 'Public' AND T1.District = 'City of San Bernardino City Unified'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'east Bohemia' AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id) FROM district WHERE A11 > 6000 AND A11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT T1.account_id, T2.A11, MAX(T2.A11) - MIN(T2.A11) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC LIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT T1.account_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id ORDER BY T1.birth_date DESC, T2.A11 DESC LIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT T2.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE YEAR(T1.date) = 1997 ORDER BY T1.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT T1.account_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND YEAR(T2.date) = 1993 ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T3.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT T1.district_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia'\t----- bird -----\tfinancial",
    "478": "SELECT (SUM(T2.balance) - SUM(T2.balance) * 1.0 / SUM(T2.balance)) * 100 FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1993-07-05' AND T2.date = '1993-03-22' AND T1.account_id = ( SELECT account_id FROM account WHERE date = '1993-07-05' ORDER BY date ASC LIMIT 1 ) AND T2.date = '1998-12-27'\t----- bird -----\tfinancial",
    "479": "SELECT CAST(SUM(CASE WHEN T1.status = 'A' THEN T1.amount ELSE 0 END) AS DECIMAL(10, 2)) * 100 / SUM(T1.amount) FROM loan AS T1\t----- bird -----\tfinancial",
    "480": "SELECT CAST(SUM(CASE WHEN T2.status = 'C' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T2.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount < 100000\t----- bird -----\tfinancial",
    "481": "SELECT T1.A3, T1.A12, (T1.A13 - T1.A12) * 100 / T1.A12 AS percentage_increase FROM district AS T1 INNER JOIN loan AS T2 ON T1.district_id = T2.account_id WHERE T2.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT T1.A3, COUNT(T2.account_id) AS num FROM district AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id JOIN client AS T3 ON T2.account_id = T3.client_id WHERE T3.gender = 'F' GROUP BY T1.A3 ORDER BY num DESC LIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK MESICNE' AND T1.amount >= 250000 AND T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.status = 'APPROVED'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status = 'C' AND T1.district_id = 1\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A15 = ( SELECT A15 FROM district ORDER BY A15 DESC LIMIT 1, 1 ) AND T1.gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT T1.A2, COUNT(T2.account_id) AS withdrawals FROM district AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ' AND T3.date LIKE '1996-01%' GROUP BY T1.A2 ORDER BY withdrawals DESC LIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(T2.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status = 'C' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A15 = ( SELECT A15 FROM district ORDER BY A15 DESC LIMIT 1, 1 ) AND T1.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'VYBER KARTOU' AND T2.amount < ( SELECT AVG(amount) FROM trans WHERE YEAR(T2.`date`) = 1998 )\t----- bird -----\tfinancial",
    "490": "SELECT T2.type FROM account AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A11 BETWEEN 8000 AND 9000 AND T1.frequency != 'OWNER'\t----- bird -----\tfinancial",
    "491": "SELECT AVG(T1.A15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND YEAR(T2.date) = 1997\t----- bird -----\tfinancial",
    "492": "SELECT T1.amount FROM trans AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE T2.client_id = 3356 AND T1.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT (SUM(T2.amount) - SUM(T2.amount)) / SUM(T2.amount) * 100 AS growth_rate FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M' AND YEAR(T2.date) = 1996\t----- bird -----\tfinancial",
    "495": "SELECT T2.frequency, T1.k_symbol FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.account = 3 AND T1.amount = 3539\t----- bird -----\tfinancial",
    "496": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS DECIMAL(10, 2)) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T2.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "497": "SELECT T2.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC, T1.district_id ASC LIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(T2.amount) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.status = 'C'\t----- bird -----\tfinancial",
    "499": "SELECT T1.client_id, T1.birth_date FROM client AS T1 INNER JOIN card AS T2 ON T1.client_id = T2.client_id INNER JOIN disp AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'OWNER' AND T2.type = 'gold'\t----- bird -----\tfinancial"
}